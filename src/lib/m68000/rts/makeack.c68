CC=cc
CFLAGS= -c -I../../.. -D_MINIX -D_POSIX_SOURCE -D__ACK__ -D_SETJMP_SAVES_REGS=1

LIBRARY=../../libc68.a

CRT0 = ../..crtso16.o
CFRT0 = ../..cfrtso16.o
OBJSL =	$(LIBRARY)(__longjmperr.o)	\
	$(LIBRARY)(__sigreturn.o)	\
	$(LIBRARY)(brksz.o)		\
	$(LIBRARY)(receive.o)		\
	$(LIBRARY)(send.o)		\
	$(LIBRARY)(sendrec.o)		\
	$(LIBRARY)(setjmp.o)		\
	$(LIBRARY)(sndrec.o)

OBJS =	$(OBJSL) $(CRT0) $(CFRT0)

NOOBJS = catch.o edata.o em_end.o end.o etext.o ncrtso.o

all:	$(OBJS) $(CRT0)

$(LIBRARY): $(OBJSL)
	rm -f $(CRT0)
	aal cr $(LIBRARY) *.o
	rm -f *.o

$(CRT0): ncrtso.o
	$(CC) $(CFLAGS) $<
	mv ncrtso.o $@

$(FCRT0): ncrtso.o
	$(CC) $(CFLAGS) -DFLOAT_STARTUP $<
	mv ncrtso.o $@

clean:	
	@rm -rf *.o *.bak

clobber: clean

$(LIBRARY)(__longjmperr.o):	__longjmperr.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(__sigreturn.o):	__sigreturn.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(brksz.o):	brksz.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(receive.o):	receive.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(send.o):	send.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(sendrec.o):	sendrec.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(setjmp.o):	setjmp.s
	$(CC) $(CFLAGS) $<

$(LIBRARY)(sndrec.o):	sndrec.s
	$(CC) $(CFLAGS) $<


