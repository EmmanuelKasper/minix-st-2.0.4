base	= ../..
include $(base)/makeconfig
include $(base)/mk/$(cfg).mk

#AR=gcc-ar
#AS=/usr/local/gnu/bin/gcc-as -mc68000
#CC=gcc
#CPP=/usr/local/gnu/bin/gcc-cpp -E
#CFLAGS= -I../../.. -D_MINIX -D_POSIX_SOURCE -D__MLONG__
TMPDIR=/usr/tmp

CPPFLAGS = -P $(XCPPFLAGS)

LIBRARY = $(LIBC)
OBJS	= \
	$(LIBRARY)(alloca.o) \
	$(LIBRARY)(get_bp.o) \
	$(LIBRARY)(oneC_sum.o) \
	$(LIBRARY)(u64.o)

all:	$(LIBRARY)

$(LIBRARY): $(OBJS)
	$(AR) $(ARFLAGS) $(LIBRARY) *.o
	$(RM) *.o

$(LIBRARY)(alloca.o): alloca.s
	$(MOT2MIT) $< | $(CPP) $(CPPFLAGS) >$(TMPDIR)/$<
	$(AS) -o alloca.o $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<

$(LIBRARY)(get_bp.o): get_bp.s
	$(MOT2MIT) $< | $(CPP) $(CPPFLAGS) >$(TMPDIR)/$<
	$(AS) -o get_bp.o $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<

$(LIBRARY)(oneC_sum.o): oneC_sum.s
	$(MOT2MIT) $< | $(CPP) $(CPPFLAGS) >$(TMPDIR)/$<
	$(AS) -o oneC_sum.o $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<

$(LIBRARY)(u64.o): u64.c
	$(CC) $(CFLAGS) -c $?

clean:	
	@$(RM) *.o *.bak

clobber: clean
